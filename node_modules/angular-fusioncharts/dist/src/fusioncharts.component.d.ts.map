{"version":3,"file":"fusioncharts.component.d.ts","sources":["fusioncharts.component.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, OnInit, OnChanges, DoCheck, AfterViewInit, OnDestroy, KeyValueDiffers, NgZone, EventEmitter } from '@angular/core';\nimport { FusionChartsService } from './fusioncharts.service';\nimport FusionChartsEvent from '../interfaces/FusionChartsEvent';\nimport FusionChartInstance from '../interfaces/FusionChartInstance';\ndeclare class FusionChartsComponent implements OnInit, OnChanges, DoCheck, AfterViewInit, OnDestroy {\n    private differs;\n    private zone;\n    chartObj: any;\n    placeholder: string;\n    dataSource: any;\n    type: string;\n    id: string;\n    width: string;\n    height: string;\n    renderAt: string;\n    dataFormat: string;\n    events: string;\n    link: string;\n    showDataLoadingMessage: boolean;\n    showChartLoadingMessage: boolean;\n    baseChartMessageFont: string;\n    baseChartMessageFontSize: string;\n    baseChartMessageColor: string;\n    dataLoadStartMessage: string;\n    dataLoadErrorMessage: string;\n    dataInvalidMessage: string;\n    dataEmptyMessage: string;\n    typeNotSupportedMessage: string;\n    loadMessage: string;\n    renderErrorMessage: string;\n    containerBackgroundColor: string;\n    containerBackgroundOpacity: string;\n    containerClassName: string;\n    baseChartMessageImageHAlign: string;\n    baseChartMessageImageVAlign: string;\n    baseChartMessageImageAlpha: number;\n    baseChartMessageImageScale: number;\n    typeNotSupportedMessageImageHAlign: string;\n    typeNotSupportedMessageImageVAlign: string;\n    typeNotSupportedMessageImageAlpha: number;\n    typeNotSupportedMessageImageScale: number;\n    dataLoadErrorMessageImageHAlign: string;\n    dataLoadErrorMessageImageVAlign: string;\n    dataLoadErrorMessageImageAlpha: number;\n    dataLoadErrorMessageImageScale: number;\n    dataLoadStartMessageImageHAlign: string;\n    dataLoadStartMessageImageVAlign: string;\n    dataLoadStartMessageImageAlpha: number;\n    dataLoadStartMessageImageScale: number;\n    dataInvalidMessageImageHAlign: string;\n    dataInvalidMessageImageVAlign: string;\n    dataInvalidMessageImageAlpha: number;\n    dataInvalidMessageImageScale: number;\n    dataEmptyMessageImageHAlign: string;\n    dataEmptyMessageImageVAlign: string;\n    dataEmptyMessageImageAlpha: number;\n    dataEmptyMessageImageScale: number;\n    renderErrorMessageImageHAlign: string;\n    renderErrorMessageImageVAlign: string;\n    renderErrorMessageImageAlpha: number;\n    renderErrorMessageImageScale: number;\n    loadMessageImageHAlign: string;\n    loadMessageImageVAlign: string;\n    loadMessageImageAlpha: number;\n    loadMessageImageScale: number;\n    chartConfig: string;\n    /**\n     * All Events List\n     */\n    private eventList;\n    /**\n     * All events emitter\n     */\n    beforeLinkedItemOpen: EventEmitter<FusionChartsEvent>;\n    linkedItemOpened: EventEmitter<FusionChartsEvent>;\n    beforeLinkedItemClose: EventEmitter<FusionChartsEvent>;\n    linkedItemClosed: EventEmitter<FusionChartsEvent>;\n    printReadyStateChange: EventEmitter<FusionChartsEvent>;\n    dataLoadRequestCompleted: EventEmitter<FusionChartsEvent>;\n    dataLoadError: EventEmitter<FusionChartsEvent>;\n    dataLoadCancelled: EventEmitter<FusionChartsEvent>;\n    dataLoadRequestCancelled: EventEmitter<FusionChartsEvent>;\n    dataUpdated: EventEmitter<FusionChartsEvent>;\n    dataUpdateCancelled: EventEmitter<FusionChartsEvent>;\n    dataLoadRequested: EventEmitter<FusionChartsEvent>;\n    beforeDataUpdate: EventEmitter<FusionChartsEvent>;\n    realTimeUpdateComplete: EventEmitter<FusionChartsEvent>;\n    chartCleared: EventEmitter<FusionChartsEvent>;\n    slicingEnd: EventEmitter<FusionChartsEvent>;\n    slicingStart: EventEmitter<FusionChartsEvent>;\n    entityRollOut: EventEmitter<FusionChartsEvent>;\n    entityRollOver: EventEmitter<FusionChartsEvent>;\n    entityClick: EventEmitter<FusionChartsEvent>;\n    connectorRollOver: EventEmitter<FusionChartsEvent>;\n    connectorRollOut: EventEmitter<FusionChartsEvent>;\n    connectorClick: EventEmitter<FusionChartsEvent>;\n    markerRollOver: EventEmitter<FusionChartsEvent>;\n    markerRollOut: EventEmitter<FusionChartsEvent>;\n    markerClick: EventEmitter<FusionChartsEvent>;\n    pageNavigated: EventEmitter<FusionChartsEvent>;\n    rotationEnd: EventEmitter<FusionChartsEvent>;\n    rotationStart: EventEmitter<FusionChartsEvent>;\n    centerLabelRollover: EventEmitter<FusionChartsEvent>;\n    centerLabelRollout: EventEmitter<FusionChartsEvent>;\n    centerLabelClick: EventEmitter<FusionChartsEvent>;\n    centerLabelChanged: EventEmitter<FusionChartsEvent>;\n    chartClick: EventEmitter<FusionChartsEvent>;\n    chartMouseMove: EventEmitter<FusionChartsEvent>;\n    chartRollOver: EventEmitter<FusionChartsEvent>;\n    chartRollOut: EventEmitter<FusionChartsEvent>;\n    backgroundLoaded: EventEmitter<FusionChartsEvent>;\n    backgroundLoadError: EventEmitter<FusionChartsEvent>;\n    legendItemClicked: EventEmitter<FusionChartsEvent>;\n    legendItemRollover: EventEmitter<FusionChartsEvent>;\n    legendItemRollout: EventEmitter<FusionChartsEvent>;\n    logoRollover: EventEmitter<FusionChartsEvent>;\n    logoRollout: EventEmitter<FusionChartsEvent>;\n    logoClick: EventEmitter<FusionChartsEvent>;\n    logoLoaded: EventEmitter<FusionChartsEvent>;\n    logoLoadError: EventEmitter<FusionChartsEvent>;\n    beforeExport: EventEmitter<FusionChartsEvent>;\n    exported: EventEmitter<FusionChartsEvent>;\n    exportCancelled: EventEmitter<FusionChartsEvent>;\n    beforePrint: EventEmitter<FusionChartsEvent>;\n    printComplete: EventEmitter<FusionChartsEvent>;\n    printCancelled: EventEmitter<FusionChartsEvent>;\n    dataLabelClick: EventEmitter<FusionChartsEvent>;\n    dataLabelRollOver: EventEmitter<FusionChartsEvent>;\n    dataLabelRollOut: EventEmitter<FusionChartsEvent>;\n    scrollStart: EventEmitter<FusionChartsEvent>;\n    scrollEnd: EventEmitter<FusionChartsEvent>;\n    onScroll: EventEmitter<FusionChartsEvent>;\n    zoomReset: EventEmitter<FusionChartsEvent>;\n    zoomedOut: EventEmitter<FusionChartsEvent>;\n    zoomedIn: EventEmitter<FusionChartsEvent>;\n    zoomed: EventEmitter<FusionChartsEvent>;\n    zoomModeChanged: EventEmitter<FusionChartsEvent>;\n    pinned: EventEmitter<FusionChartsEvent>;\n    dataRestored: EventEmitter<FusionChartsEvent>;\n    beforeDataSubmit: EventEmitter<FusionChartsEvent>;\n    dataSubmitError: EventEmitter<FusionChartsEvent>;\n    dataSubmitted: EventEmitter<FusionChartsEvent>;\n    dataSubmitCancelled: EventEmitter<FusionChartsEvent>;\n    chartUpdated: EventEmitter<FusionChartsEvent>;\n    nodeAdded: EventEmitter<FusionChartsEvent>;\n    nodeUpdated: EventEmitter<FusionChartsEvent>;\n    nodeDeleted: EventEmitter<FusionChartsEvent>;\n    connectorAdded: EventEmitter<FusionChartsEvent>;\n    connectorUpdated: EventEmitter<FusionChartsEvent>;\n    connectorDeleted: EventEmitter<FusionChartsEvent>;\n    labelAdded: EventEmitter<FusionChartsEvent>;\n    labelDeleted: EventEmitter<FusionChartsEvent>;\n    selectionRemoved: EventEmitter<FusionChartsEvent>;\n    selectionStart: EventEmitter<FusionChartsEvent>;\n    selectionEnd: EventEmitter<FusionChartsEvent>;\n    labelClick: EventEmitter<FusionChartsEvent>;\n    labelRollOver: EventEmitter<FusionChartsEvent>;\n    labelRollOut: EventEmitter<FusionChartsEvent>;\n    labelDragStart: EventEmitter<FusionChartsEvent>;\n    labelDragEnd: EventEmitter<FusionChartsEvent>;\n    dataplotDragStart: EventEmitter<FusionChartsEvent>;\n    dataplotDragEnd: EventEmitter<FusionChartsEvent>;\n    processClick: EventEmitter<FusionChartsEvent>;\n    processRollOver: EventEmitter<FusionChartsEvent>;\n    processRollOut: EventEmitter<FusionChartsEvent>;\n    categoryClick: EventEmitter<FusionChartsEvent>;\n    categoryRollOver: EventEmitter<FusionChartsEvent>;\n    categoryRollOut: EventEmitter<FusionChartsEvent>;\n    milestoneClick: EventEmitter<FusionChartsEvent>;\n    milestoneRollOver: EventEmitter<FusionChartsEvent>;\n    milestoneRollOut: EventEmitter<FusionChartsEvent>;\n    chartTypeChanged: EventEmitter<FusionChartsEvent>;\n    overlayButtonClick: EventEmitter<FusionChartsEvent>;\n    loaded: EventEmitter<FusionChartsEvent>;\n    rendered: EventEmitter<FusionChartsEvent>;\n    drawComplete: EventEmitter<FusionChartsEvent>;\n    renderComplete: EventEmitter<FusionChartsEvent>;\n    dataInvalid: EventEmitter<FusionChartsEvent>;\n    dataXMLInvalid: EventEmitter<FusionChartsEvent>;\n    dataLoaded: EventEmitter<FusionChartsEvent>;\n    noDataToDisplay: EventEmitter<FusionChartsEvent>;\n    legendPointerDragStart: EventEmitter<FusionChartsEvent>;\n    legendPointerDragStop: EventEmitter<FusionChartsEvent>;\n    legendRangeUpdated: EventEmitter<FusionChartsEvent>;\n    alertComplete: EventEmitter<FusionChartsEvent>;\n    realTimeUpdateError: EventEmitter<FusionChartsEvent>;\n    dataplotRollOver: EventEmitter<FusionChartsEvent>;\n    dataplotRollOut: EventEmitter<FusionChartsEvent>;\n    dataplotClick: EventEmitter<FusionChartsEvent>;\n    linkClicked: EventEmitter<FusionChartsEvent>;\n    beforeRender: EventEmitter<FusionChartsEvent>;\n    renderCancelled: EventEmitter<FusionChartsEvent>;\n    beforeResize: EventEmitter<FusionChartsEvent>;\n    resized: EventEmitter<FusionChartsEvent>;\n    resizeCancelled: EventEmitter<FusionChartsEvent>;\n    beforeDispose: EventEmitter<FusionChartsEvent>;\n    disposed: EventEmitter<FusionChartsEvent>;\n    disposeCancelled: EventEmitter<FusionChartsEvent>;\n    linkedChartInvoked: EventEmitter<FusionChartsEvent>;\n    beforeDrillDown: EventEmitter<FusionChartsEvent>;\n    drillDown: EventEmitter<FusionChartsEvent>;\n    beforeDrillUp: EventEmitter<FusionChartsEvent>;\n    drillUp: EventEmitter<FusionChartsEvent>;\n    drillDownCancelled: EventEmitter<FusionChartsEvent>;\n    drillUpCancelled: EventEmitter<FusionChartsEvent>;\n    initialized: EventEmitter<FusionChartInstance>;\n    containerId: string;\n    private configObj;\n    private oldDataSource;\n    private oldDataTable;\n    private constructerParams;\n    element: ElementRef;\n    fusionchartsService: FusionChartsService;\n    constructor(element: ElementRef, fusionchartsService: FusionChartsService, differs: KeyValueDiffers, zone: NgZone);\n    checkIfDataTableExists(dataSource: any): boolean;\n    cloneDataSource(obj: any): any;\n    ngOnInit(): void;\n    ngOnChanges(changes: any): void;\n    ngDoCheck(): void;\n    updateChartData(): void;\n    updateWidth(): void;\n    updateHeight(): void;\n    updateType(): void;\n    generateEventsCallback(eventList: Array<string>): {};\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n}\nexport { FusionChartsComponent };\n"]}